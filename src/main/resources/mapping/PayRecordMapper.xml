<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mybatisreverse.mapper.PayRecordMapper" >
  <resultMap id="BaseResultMap" type="com.example.mybatisreverse.model.PayRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="currency" property="currency" jdbcType="INTEGER" />
    <result column="confirm_date" property="confirmDate" jdbcType="TIMESTAMP" />
    <result column="submit_date" property="submitDate" jdbcType="TIMESTAMP" />
    <result column="pay_method" property="payMethod" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="agent_id" property="agentId" jdbcType="BIGINT" />
    <result column="rechargegoal" property="rechargegoal" jdbcType="INTEGER" />
    <result column="recharge_username" property="rechargeUsername" jdbcType="VARCHAR" />
    <result column="from_platform" property="fromPlatform" jdbcType="INTEGER" />
    <result column="account_update" property="accountUpdate" jdbcType="DECIMAL" />
    <result column="pay_record_id" property="payRecordId" jdbcType="VARCHAR" />
    <result column="invoice" property="invoice" jdbcType="INTEGER" />
    <result column="sources" property="sources" jdbcType="INTEGER" />
    <result column="incomeoroutcome" property="incomeoroutcome" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="offline_charge_no" property="offlineChargeNo" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="transaction_id" property="transactionId" jdbcType="VARCHAR" />
    <result column="roll_in_username" property="rollInUsername" jdbcType="VARCHAR" />
    <result column="coupon_update" property="couponUpdate" jdbcType="DECIMAL" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.mybatisreverse.model.PayRecord" extends="BaseResultMap" >
    <result column="pay_params" property="payParams" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, amount, currency, confirm_date, submit_date, pay_method, status, user_id, type, 
    agent_id, rechargegoal, recharge_username, from_platform, account_update, pay_record_id, 
    invoice, sources, incomeoroutcome, token, refund_fee, admin_id, admin_name, offline_charge_no, 
    remark, transaction_id, roll_in_username, coupon_update, rate
  </sql>
  <sql id="Blob_Column_List" >
    pay_params
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.mybatisreverse.model.PayRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.mybatisreverse.model.PayRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_pay_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_pay_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.mybatisreverse.model.PayRecordExample" >
    delete from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.mybatisreverse.model.PayRecord" >
    insert into tb_pay_record (id, amount, currency, 
      confirm_date, submit_date, pay_method, 
      status, user_id, type, 
      agent_id, rechargegoal, recharge_username, 
      from_platform, account_update, pay_record_id, 
      invoice, sources, incomeoroutcome, 
      token, refund_fee, admin_id, 
      admin_name, offline_charge_no, remark, 
      transaction_id, roll_in_username, coupon_update, 
      rate, pay_params)
    values (#{id,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{currency,jdbcType=INTEGER}, 
      #{confirmDate,jdbcType=TIMESTAMP}, #{submitDate,jdbcType=TIMESTAMP}, #{payMethod,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{agentId,jdbcType=BIGINT}, #{rechargegoal,jdbcType=INTEGER}, #{rechargeUsername,jdbcType=VARCHAR}, 
      #{fromPlatform,jdbcType=INTEGER}, #{accountUpdate,jdbcType=DECIMAL}, #{payRecordId,jdbcType=VARCHAR}, 
      #{invoice,jdbcType=INTEGER}, #{sources,jdbcType=INTEGER}, #{incomeoroutcome,jdbcType=INTEGER}, 
      #{token,jdbcType=VARCHAR}, #{refundFee,jdbcType=DECIMAL}, #{adminId,jdbcType=INTEGER}, 
      #{adminName,jdbcType=VARCHAR}, #{offlineChargeNo,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{transactionId,jdbcType=VARCHAR}, #{rollInUsername,jdbcType=VARCHAR}, #{couponUpdate,jdbcType=DECIMAL}, 
      #{rate,jdbcType=DECIMAL}, #{payParams,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.mybatisreverse.model.PayRecord" >
    insert into tb_pay_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="confirmDate != null" >
        confirm_date,
      </if>
      <if test="submitDate != null" >
        submit_date,
      </if>
      <if test="payMethod != null" >
        pay_method,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="agentId != null" >
        agent_id,
      </if>
      <if test="rechargegoal != null" >
        rechargegoal,
      </if>
      <if test="rechargeUsername != null" >
        recharge_username,
      </if>
      <if test="fromPlatform != null" >
        from_platform,
      </if>
      <if test="accountUpdate != null" >
        account_update,
      </if>
      <if test="payRecordId != null" >
        pay_record_id,
      </if>
      <if test="invoice != null" >
        invoice,
      </if>
      <if test="sources != null" >
        sources,
      </if>
      <if test="incomeoroutcome != null" >
        incomeoroutcome,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="offlineChargeNo != null" >
        offline_charge_no,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="rollInUsername != null" >
        roll_in_username,
      </if>
      <if test="couponUpdate != null" >
        coupon_update,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="payParams != null" >
        pay_params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=INTEGER},
      </if>
      <if test="confirmDate != null" >
        #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="submitDate != null" >
        #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="rechargegoal != null" >
        #{rechargegoal,jdbcType=INTEGER},
      </if>
      <if test="rechargeUsername != null" >
        #{rechargeUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromPlatform != null" >
        #{fromPlatform,jdbcType=INTEGER},
      </if>
      <if test="accountUpdate != null" >
        #{accountUpdate,jdbcType=DECIMAL},
      </if>
      <if test="payRecordId != null" >
        #{payRecordId,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null" >
        #{invoice,jdbcType=INTEGER},
      </if>
      <if test="sources != null" >
        #{sources,jdbcType=INTEGER},
      </if>
      <if test="incomeoroutcome != null" >
        #{incomeoroutcome,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="offlineChargeNo != null" >
        #{offlineChargeNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="rollInUsername != null" >
        #{rollInUsername,jdbcType=VARCHAR},
      </if>
      <if test="couponUpdate != null" >
        #{couponUpdate,jdbcType=DECIMAL},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="payParams != null" >
        #{payParams,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.mybatisreverse.model.PayRecordExample" resultType="java.lang.Integer" >
    select count(*) from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_pay_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=INTEGER},
      </if>
      <if test="record.confirmDate != null" >
        confirm_date = #{record.confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitDate != null" >
        submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payMethod != null" >
        pay_method = #{record.payMethod,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null" >
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.rechargegoal != null" >
        rechargegoal = #{record.rechargegoal,jdbcType=INTEGER},
      </if>
      <if test="record.rechargeUsername != null" >
        recharge_username = #{record.rechargeUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPlatform != null" >
        from_platform = #{record.fromPlatform,jdbcType=INTEGER},
      </if>
      <if test="record.accountUpdate != null" >
        account_update = #{record.accountUpdate,jdbcType=DECIMAL},
      </if>
      <if test="record.payRecordId != null" >
        pay_record_id = #{record.payRecordId,jdbcType=VARCHAR},
      </if>
      <if test="record.invoice != null" >
        invoice = #{record.invoice,jdbcType=INTEGER},
      </if>
      <if test="record.sources != null" >
        sources = #{record.sources,jdbcType=INTEGER},
      </if>
      <if test="record.incomeoroutcome != null" >
        incomeoroutcome = #{record.incomeoroutcome,jdbcType=INTEGER},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.refundFee != null" >
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null" >
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.offlineChargeNo != null" >
        offline_charge_no = #{record.offlineChargeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionId != null" >
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.rollInUsername != null" >
        roll_in_username = #{record.rollInUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.couponUpdate != null" >
        coupon_update = #{record.couponUpdate,jdbcType=DECIMAL},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.payParams != null" >
        pay_params = #{record.payParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tb_pay_record
    set id = #{record.id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=INTEGER},
      confirm_date = #{record.confirmDate,jdbcType=TIMESTAMP},
      submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      pay_method = #{record.payMethod,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      rechargegoal = #{record.rechargegoal,jdbcType=INTEGER},
      recharge_username = #{record.rechargeUsername,jdbcType=VARCHAR},
      from_platform = #{record.fromPlatform,jdbcType=INTEGER},
      account_update = #{record.accountUpdate,jdbcType=DECIMAL},
      pay_record_id = #{record.payRecordId,jdbcType=VARCHAR},
      invoice = #{record.invoice,jdbcType=INTEGER},
      sources = #{record.sources,jdbcType=INTEGER},
      incomeoroutcome = #{record.incomeoroutcome,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      offline_charge_no = #{record.offlineChargeNo,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      roll_in_username = #{record.rollInUsername,jdbcType=VARCHAR},
      coupon_update = #{record.couponUpdate,jdbcType=DECIMAL},
      rate = #{record.rate,jdbcType=DECIMAL},
      pay_params = #{record.payParams,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_pay_record
    set id = #{record.id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=INTEGER},
      confirm_date = #{record.confirmDate,jdbcType=TIMESTAMP},
      submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      pay_method = #{record.payMethod,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      rechargegoal = #{record.rechargegoal,jdbcType=INTEGER},
      recharge_username = #{record.rechargeUsername,jdbcType=VARCHAR},
      from_platform = #{record.fromPlatform,jdbcType=INTEGER},
      account_update = #{record.accountUpdate,jdbcType=DECIMAL},
      pay_record_id = #{record.payRecordId,jdbcType=VARCHAR},
      invoice = #{record.invoice,jdbcType=INTEGER},
      sources = #{record.sources,jdbcType=INTEGER},
      incomeoroutcome = #{record.incomeoroutcome,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      offline_charge_no = #{record.offlineChargeNo,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      roll_in_username = #{record.rollInUsername,jdbcType=VARCHAR},
      coupon_update = #{record.couponUpdate,jdbcType=DECIMAL},
      rate = #{record.rate,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mybatisreverse.model.PayRecord" >
    update tb_pay_record
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=INTEGER},
      </if>
      <if test="confirmDate != null" >
        confirm_date = #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="submitDate != null" >
        submit_date = #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="agentId != null" >
        agent_id = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="rechargegoal != null" >
        rechargegoal = #{rechargegoal,jdbcType=INTEGER},
      </if>
      <if test="rechargeUsername != null" >
        recharge_username = #{rechargeUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromPlatform != null" >
        from_platform = #{fromPlatform,jdbcType=INTEGER},
      </if>
      <if test="accountUpdate != null" >
        account_update = #{accountUpdate,jdbcType=DECIMAL},
      </if>
      <if test="payRecordId != null" >
        pay_record_id = #{payRecordId,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null" >
        invoice = #{invoice,jdbcType=INTEGER},
      </if>
      <if test="sources != null" >
        sources = #{sources,jdbcType=INTEGER},
      </if>
      <if test="incomeoroutcome != null" >
        incomeoroutcome = #{incomeoroutcome,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="offlineChargeNo != null" >
        offline_charge_no = #{offlineChargeNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null" >
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="rollInUsername != null" >
        roll_in_username = #{rollInUsername,jdbcType=VARCHAR},
      </if>
      <if test="couponUpdate != null" >
        coupon_update = #{couponUpdate,jdbcType=DECIMAL},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="payParams != null" >
        pay_params = #{payParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.mybatisreverse.model.PayRecord" >
    update tb_pay_record
    set amount = #{amount,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=INTEGER},
      confirm_date = #{confirmDate,jdbcType=TIMESTAMP},
      submit_date = #{submitDate,jdbcType=TIMESTAMP},
      pay_method = #{payMethod,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      agent_id = #{agentId,jdbcType=BIGINT},
      rechargegoal = #{rechargegoal,jdbcType=INTEGER},
      recharge_username = #{rechargeUsername,jdbcType=VARCHAR},
      from_platform = #{fromPlatform,jdbcType=INTEGER},
      account_update = #{accountUpdate,jdbcType=DECIMAL},
      pay_record_id = #{payRecordId,jdbcType=VARCHAR},
      invoice = #{invoice,jdbcType=INTEGER},
      sources = #{sources,jdbcType=INTEGER},
      incomeoroutcome = #{incomeoroutcome,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      refund_fee = #{refundFee,jdbcType=DECIMAL},
      admin_id = #{adminId,jdbcType=INTEGER},
      admin_name = #{adminName,jdbcType=VARCHAR},
      offline_charge_no = #{offlineChargeNo,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      roll_in_username = #{rollInUsername,jdbcType=VARCHAR},
      coupon_update = #{couponUpdate,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL},
      pay_params = #{payParams,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mybatisreverse.model.PayRecord" >
    update tb_pay_record
    set amount = #{amount,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=INTEGER},
      confirm_date = #{confirmDate,jdbcType=TIMESTAMP},
      submit_date = #{submitDate,jdbcType=TIMESTAMP},
      pay_method = #{payMethod,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      agent_id = #{agentId,jdbcType=BIGINT},
      rechargegoal = #{rechargegoal,jdbcType=INTEGER},
      recharge_username = #{rechargeUsername,jdbcType=VARCHAR},
      from_platform = #{fromPlatform,jdbcType=INTEGER},
      account_update = #{accountUpdate,jdbcType=DECIMAL},
      pay_record_id = #{payRecordId,jdbcType=VARCHAR},
      invoice = #{invoice,jdbcType=INTEGER},
      sources = #{sources,jdbcType=INTEGER},
      incomeoroutcome = #{incomeoroutcome,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      refund_fee = #{refundFee,jdbcType=DECIMAL},
      admin_id = #{adminId,jdbcType=INTEGER},
      admin_name = #{adminName,jdbcType=VARCHAR},
      offline_charge_no = #{offlineChargeNo,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      roll_in_username = #{rollInUsername,jdbcType=VARCHAR},
      coupon_update = #{couponUpdate,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>